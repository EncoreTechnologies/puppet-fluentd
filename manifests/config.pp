# `fluentd::config` is a Puppet defined type that manages individual Fluentd configuration files.
# It uses the `fluentd` class to get the values for the owner, group, and mode of the configuration file.
# It also uses the `fluent_config` function to generate the content of the configuration file.
#
# @param config A hash that represents the configuration for Fluentd. This hash is passed to the `fluent_config` function 
# to generate the content of the configuration file.
#
# @example
#   fluentd::config { 'my_config':
#     config => {
#       'source' => {
#         'type' => 'forward',
#         'port' => '24224',
#       },
#       'match' => {
#         'type' => 'stdout',
#       },
#     },
#   }
#
# This will create a Fluentd configuration file at the path specified by `fluentd::config_path` with the name 'my_config'.
# The content of the configuration file will be generated by the `fluent_config` function based on the provided `config` hash.
# The owner, group, and mode of the configuration file will be set to the values of `fluentd::config_owner`, `fluentd::config_group`, 
# and `fluentd::config_file_mode`, respectively. The configuration file will require the `fluentd::install` class, 
# meaning that Fluentd must be installed before the configuration file is managed. The configuration file will notify the 
# `fluentd::service` class, meaning that the Fluentd service will be refreshed whenever the configuration file changes.
define fluentd::config ($config) {
  include fluentd

  file { "${fluentd::config_path}/${title}":
    ensure  => file,
    content => fluent_config($config),
    owner   => $fluentd::config_owner,
    group   => $fluentd::config_group,
    mode    => $fluentd::config_file_mode,
    require => Class['fluentd::install'],
    notify  => Class['fluentd::service'],
  }
}
